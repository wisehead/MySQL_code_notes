1.mem_heap_create_func
内存堆的创建。

2.mem_pool_create
内存实例中会有一个 mem_comm_pool 对象，称之为通用内存池，其在innodb 启动进行内存管理初始化时调用函数 mem_pool_create创建，
大小通过参数 innodb_additional_mem_pool_size 进行定义。 通用内存池服务于之前介绍的内存堆，主要用于进行小块内存的分配，通常用于分配一些 Innodb 引擎内部的数据结构对象。

mysql_declare_plugin
--innobase_init
----innobase_start_or_create_for_mysql
------srv_boot
--------srv_general_init
----------mem_init
------------mem_pool_create


3.mem_comm_pool对象
/** Data structure for a memory pool. The space is allocated using the buddy
algorithm, where free list i contains areas of size 2 to power i. */
struct mem_pool_t{
	byte*		buf;		/*!< memory pool */
	ulint		size;		/*!< memory common pool size */
	ulint		reserved;	/*!< amount of currently allocated
					memory */
	ib_mutex_t		mutex;		/*!< mutex protecting this struct */
	UT_LIST_BASE_NODE_T(mem_area_t)
			free_list[64];	/*!< lists of free memory areas: an
					area is put to the list whose number
					is the 2-logarithm of the area size */
};


free_list实现buddy算法，以解决外碎片问题。

4.mem_area_alloc:从通用内存池建一个内存堆，或者为内存堆增加一块内存块。
mem_frame_alloc:从缓冲池分配一整页大小的内存空间。

5.内存堆是InnoDB存储引擎内存管理基本的也是最重要的对象。内存堆相当于一个stack。
若要释放内存堆中的某个内存块，只能释放位于栈顶的内存块，或者一次性释放内存堆中的所有内存库块。
从这个栈中，可以分配更小块的内存。

调用者请求内存对象时候，获取最后一个内存块用于分配。如果该块用完，则新分配。

内存堆的创建通过mem_heap_create_func完成

6.InnoDB引擎有三种内存堆
--MEM_HEAP_DYNAMIC 堆的内存调用通用内存池接口申请。
--MEM_HEAP_BUFFER：堆的内存是从缓冲池申请的。
--MEM_HEAP_BTR_SEARCH是MEM_HEAP_BUFFER的子类型，仅在自适应哈希索引中使用。


7.通用内存池
对象名字：mem_comm_pool
数据结构：mem_pool_struct
创建函数：mem_pool_create
功能：主要用于小块内存的分配，通常用于分配一些InnoDB引擎内存数据结构对象。
管理方法：buddy算法管理碎片。

通用内存池一般比较小，默认8MB，其缓存的最后两项数据字典和自适应索引的哈希表。可能占据大量的磁盘空间。


8.

